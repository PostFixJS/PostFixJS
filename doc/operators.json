{"functions":[{"description":"Get the length of a string.","name":"length","params":[{"name":"str","type":":Str","description":"String"}],"returns":[{"type":":Int","description":"Length of the string"}]},{"description":"Get the length of an array.","name":"length","params":[{"name":"arr","type":":Arr","description":"Array"}],"returns":[{"type":":Int","description":"Length of the array"}]},{"description":"Get the i-th character of a string.","name":"get","params":[{"name":"str","type":":Str","description":"String"},{"name":"i","type":":Int","description":"Zero-based index of a character in the string"}],"returns":[{"type":":Str","description":"The i-th character of the string"}]},{"description":"Get the i-th item of an array.","name":"get","params":[{"name":"arr","type":":Arr","description":"Array"},{"name":"i","type":":Int","description":"Zero-based index of the item to get"}],"returns":[{"type":":Obj","description":"The i-th element in the array"}]},{"description":"Set the i-th character of a string.","name":"set","params":[{"name":"str","type":":Str","description":"String"},{"name":"i","type":":Int","description":"Zero-based index of a character in the string"}],"returns":[{"type":":Str","description":"The updated string"}]},{"description":"Set the i-th item of an array.","name":"set","params":[{"name":"arr","type":":Arr","description":"Array"},{"name":"i","type":":Int","description":"Zero-based index of the item to set"}],"returns":[{"type":":Arr","description":"The updated array"}]},{"description":"Get the item after the first item in the array that is equal to the given key.\nE.g., `[ :a 1 :b 2 ] :a 0 key-get` would return the value after `:a`, which is `1`.","name":"key-get","params":[{"name":"arr","type":":Arr","description":"Array"},{"name":"key","type":":Obj","description":"Key"},{"name":"default","type":":Obj","description":"Default value that is returned when the key is not found in the array"}],"returns":[{"type":":Obj","description":"The value at the given key or the default value if the key is not found"}]},{"description":"Set the item after the first item in the array that is equal to the given key. If the key is not found, it is appended to the array.","name":"key-set","params":[{"name":"arr","type":":Arr","description":"Array"},{"name":"key","type":":Obj","description":"Key"},{"name":"value","type":":Obj","description":"Value to assign at the given key"}],"returns":[{"type":":Arr","description":"The modified array"}]},{"description":"Shuffle the given array.\nInternally, this function uses rand-int, so it is deterministic when the seed is known.","name":"shuffle","params":[{"name":"arr","type":":Arr","description":"Array"}],"returns":[{"type":":Arr","description":"The shuffled array"}]},{"description":"Reverse the given array.","name":"reverse","params":[{"name":"arr","type":":Arr","description":"Array"}],"returns":[{"type":":Arr","description":"A new array with the items in reverse order"}]},{"description":"Reverse the given string.","name":"reverse","params":[{"name":"str","type":":Str","description":"String"}],"returns":[{"type":":Str","description":"The reversed string"}]},{"description":"Append a value to an array.","name":"append","params":[{"name":"arr","type":":Arr","description":"Array"},{"name":"value","type":":Obj","description":"Value to append"}],"returns":[]},{"description":"Remove the first item that is equal to the given value from the array.","name":"remove","params":[{"name":"arr","type":":Arr","description":"Array"},{"name":"value","type":":Obj","description":"Value to remove"}],"returns":[]},{"description":"Check if a is smaller than b.","name":"<","params":[{"name":"a","type":":Num","description":"Number a"},{"name":"b","type":":Num","description":"Number b"}],"returns":[{"type":":Bool","description":"true if a is smaller than b, false otherwise"}]},{"description":"Check if the string a appears before b when sorted alphabetically.","name":"<","params":[{"name":"a","type":":Str","description":"String a"},{"name":"b","type":":Str","description":"String b"}],"returns":[{"type":":Bool","description":"true if a comes before b in alphabetical order, false otherwise"}]},{"description":"Check if a is smaller than or equal to b.","name":"<=","params":[{"name":"a","type":":Num","description":"Number a"},{"name":"b","type":":Num","description":"Number b"}],"returns":[{"type":":Bool","description":"true if a is smaller than or equal to b, false otherwise"}]},{"description":"Check if the string a equals string b or appears before b when sorted alphabetically.","name":"<=","params":[{"name":"a","type":":Str","description":"String a"},{"name":"b","type":":Str","description":"String b"}],"returns":[{"type":":Bool","description":"true if a equals b or comes before b in alphabetical order, false otherwise"}]},{"description":"Check if a is greater than b.","name":">","params":[{"name":"a","type":":Num","description":"Number a"},{"name":"b","type":":Num","description":"Number b"}],"returns":[{"type":":Bool","description":"true if a is greater than b, false otherwise"}]},{"description":"Check if the string a appears after b when sorted alphabetically.","name":">","params":[{"name":"a","type":":Str","description":"String a"},{"name":"b","type":":Str","description":"String b"}],"returns":[{"type":":Bool","description":"true if a comes after b in alphabetical order, false otherwise"}]},{"description":"Check if a is greater than or equal to b.","name":">=","params":[{"name":"a","type":":Num","description":"Number a"},{"name":"b","type":":Num","description":"Number b"}],"returns":[{"type":":Bool","description":"true if a is greater than or equal to b, false otherwise"}]},{"description":"Check if the string a equals string b or appears after b when sorted alphabetically.","name":">=","params":[{"name":"a","type":":Str","description":"String a"},{"name":"b","type":":Str","description":"String b"}],"returns":[{"type":":Bool","description":"true if a equals b or comes after b in alphabetical order, false otherwise"}]},{"description":"Check if two objects are equal, according to the following rules:\n\n* Numbers, booleans and strings are equal if they have the same value\n* Symbols are equal if they have the same name\n* Arrays are equal if all entries are equal\n","name":"=","params":[{"name":"a","type":":Obj","description":"Object a"},{"name":"b","type":":Obj","description":"Object b"}],"returns":[{"type":":Bool","description":"true if the objects are equal, false otherwise"}]},{"description":"Check if two objects are not equal, according to the following rules:\n\n* Numbers, booleans and strings are equal if they have the same value\n* Symbols are equal if they have the same name\n* Arrays are equal if all entries are equal\n","name":"!=","params":[{"name":"a","type":":Obj","description":"Object a"},{"name":"b","type":":Obj","description":"Object b"}],"returns":[{"type":":Bool","description":"true if the objects are not equal, false otherwise"}]},{"description":"Check if two objects are approximately equal, according to the following rules:\n\n* Numbers are approximately equal if the difference is smaller than or equal to the tolerance\n* Arrays are approximately equal if all entries are approximately equal\n* For all other types, the tolerance is ignored and the `=` operator is used\n","name":"~=","params":[{"name":"a","type":":Obj","description":"Object a"},{"name":"b","type":":Obj","description":"Object b"}],"returns":[{"type":":Bool","description":"true if the objects are approximately equal, false otherwise"}]},{"description":"Check if two objects are not approximately equal, according to the following rules:\n\n* Numbers are approximately equal if the difference is smaller than or equal to the tolerance\n* Arrays are approximately equal if all entries are approximately equal\n* For all other types, the tolerance is ignored and the `=` operator is used\n","name":"!~=","params":[{"name":"a","type":":Obj","description":"Object a"},{"name":"b","type":":Obj","description":"Object b"}],"returns":[{"type":":Bool","description":"true if the objects are not approximately equal, false otherwise"}]},{"description":"Run `then` if the `condition` is true or `else` otherwise.","name":"if","params":[{"name":"condition","type":":Bool","description":"A condition"},{"name":"then","type":":ExeArr","description":"Code to run if the condition is true"},{"name":"else","type":":ExeArr","description":"Code to run if the condition is false (optional)"}],"returns":[]},{"description":"Execute the first condition that returns `true`. Only the executable array of the first matching condition is executed.","name":"cond","params":[{"name":"conditions","type":":Arr","description":"Array of executable arrays, always pairs of an executable array that calculates a condition and an executable array that is executed if the condition is true"}],"returns":[]},{"description":"Execute the given executable array until the loop is exited with `break` or `breakif`.","name":"loop","params":[{"name":"body","type":":ExeArr","description":"Executable array to run in a loop"}],"returns":[]},{"description":"Execute the given executable array for every even number between lower (inclusive) and upper (exclusive).\nBefore every iteration, the current value is pushed on the stack.","name":"for","params":[{"name":"lower","type":":Int","description":"Start of the range (inclusive)"},{"name":"upper","type":":Int","description":"End of the range (exclusive)"},{"name":"body","type":":ExeArr","description":"Executable array to run for number in the range"}],"returns":[]},{"description":"Execute the given executable array for every item of the array.\nBefore every iteration, the current item is pushed on the stack.","name":"for","params":[{"name":"arr","type":":Arr","description":"Array to iterate through"},{"name":"body","type":":ExeArr","description":"Executable array to run for every item"}],"returns":[]},{"description":"Execute the given executable array for character of the string.\nBefore every iteration, the current character is pushed on the stack.","name":"for","params":[{"name":"str","type":":Str","description":"A string"},{"name":"body","type":":ExeArr","description":"Executable array to run for every character"}],"returns":[]},{"description":"Execute the given executable array for every item of the array.\nBefore every iteration, the current item and index are pushed on the stack.","name":"fori","params":[{"name":"arr","type":":Arr","description":"Array to iterate through"},{"name":"body","type":":ExeArr","description":"Executable array to run for every item"}],"returns":[]},{"description":"Execute the given executable array for character of the string.\nBefore every iteration, the current character and index are pushed on the stack.","name":"fori","params":[{"name":"str","type":":Str","description":"A string"},{"name":"body","type":":ExeArr","description":"Executable array to run for every character"}],"returns":[]},{"description":"Break the current loop.","name":"break","params":[],"returns":[]},{"description":"Break the current loop if the condition is true.","name":"breakif","params":[{"name":"condition","type":":Bool","description":"A condition"}],"returns":[]},{"description":"Push an error on the stack. This stops the program immediately.","name":"err","params":[{"name":"message","type":":Str","description":"An error message"}],"returns":[]},{"description":"Execute the object that is on top of the stack.","name":"exec","params":[{"name":"obj","type":":Obj"}],"returns":[]},{"description":"Create a function and save it into the current dictionary.","name":"fun","params":[{"name":"name","type":":Sym","description":"Symbol for the function name"},{"name":"params","type":":Params","description":"Parameter list of the function (optional)"},{"name":"body","type":":ExeArr","description":"Function body"}],"returns":[]},{"description":"Create a lambda function.","name":"lam","params":[{"name":"params","type":":Params","description":"Parameter list of the function (optional)"},{"name":"body","type":":ExeArr","description":"Function body"}],"returns":[{"type":":Lam","description":"Lambda function"}]},{"description":"Pop values from the stack and bind them to the parameter list, that is, put them into the current dictionary with the names from the parameter list. An error is thrown if types don't match.","name":"popv","params":[{"name":"params","type":":Params","description":"Parameter list to bind the stack content to"}],"returns":[]},{"description":"Get the value of the given symbol from the current dictionary and put it on the stack, without executing it.","name":"vref","params":[{"name":"sym","type":":Sym","description":"Name of a dictionary entry"}],"returns":[{"type":":Obj","description":"Value of the dictionary entry"}]},{"description":"Check if an object is an empty array or executable array or nil.","name":"empty?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if the object is an empty array or executable array or nil, false otherwise"}]},{"description":"Put a value in the dictionary under the specified name.","name":"!","params":[{"name":"name","type":":Sym","description":"Name of the dictionary entry"},{"name":"value","type":":Obj","description":"value"}],"returns":[]},{"description":"Check if a and b are true.","name":"and","params":[{"name":"a","type":":Bool","description":"A boolean"},{"name":"b","type":":Bool","description":"A boolean"}],"returns":[{"type":":Bool","description":"True if a and b are true, false otherwise"}]},{"description":"Check if all values in the array are :Bool and true. All items are executed, so executable arrays that produce a :Bool may be used. The evaluation is stopped when the first non-true value is encountered.","name":"and","params":[{"name":"arr","type":":Arr","description":"Array of items to check"}],"returns":[{"type":":Bool","description":"True if all items are true, false otherwise"}]},{"description":"Check if a or b is true, or both are true.","name":"or","params":[{"name":"a","type":":Bool","description":"A boolean"},{"name":"b","type":":Bool","description":"A boolean"}],"returns":[{"type":":Bool","description":"True if a or b are true, false otherwise"}]},{"description":"Check if at least one values in the array is :Bool and true. All items are executed, so executable arrays that produce a :Bool may be used. The evaluation is stopped when the first true value is encountered.","name":"or","params":[{"name":"arr","type":":Arr","description":"Array of items to check"}],"returns":[{"type":":Bool","description":"True if at least one item is true, false otherwise"}]},{"description":"Negate a boolean value.","name":"not","params":[{"name":"b","type":":Bool","description":"A boolean"}],"returns":[{"type":":Bool","description":"True if the boolean is false, false otherwise"}]},{"description":"Add two numbers.","name":"+","params":[{"name":"a","type":":Num","description":"A number"},{"name":"b","type":":Num","description":"A number"}],"returns":[{"type":":Num","description":"The sum of the two numbers"}]},{"description":"Concatenate the two strings.","name":"+","params":[{"name":"a","type":":Str","description":"A string"},{"name":"b","type":":Str","description":"A string"}],"returns":[{"type":":Str","description":"The concatenated string"}]},{"description":"Subtract two numbers.","name":"-","params":[{"name":"a","type":":Num","description":"A number"},{"name":"b","type":":Num","description":"A number"}],"returns":[{"type":":Num","description":"The difference of the two numbers"}]},{"description":"Multiply two numbers.","name":"*","params":[{"name":"a","type":":Num","description":"A number"},{"name":"b","type":":Num","description":"A number"}],"returns":[{"type":":Num","description":"The product of the two numbers"}]},{"description":"Divide two numbers.","name":"/","params":[{"name":"a","type":":Num","description":"Dividend"},{"name":"b","type":":Num","description":"Divisor"}],"returns":[{"type":":Flt","description":"The quotient of the two numbers"}]},{"description":"Divide two numbers and discard the remainder.","name":"i/","params":[{"name":"a","type":":Num","description":"Dividend"},{"name":"b","type":":Num","description":"Divisor"}],"returns":[{"type":":Int","description":"The quotient of the two numbers, without the remainder"}]},{"description":"Calculate the remainder of a divison.","name":"mod","params":[{"name":"a","type":":Num","description":"Dividend"},{"name":"b","type":":Num","description":"Divisor"}],"returns":[{"type":":Num","description":"The remainder of the division"}]},{"description":"Get the signum of a number.","name":"sign","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Int","description":"-1 of x is negative, 1 if x is positive, 0 if x is 0"}]},{"description":"Get the absolute value of a number.","name":"abs","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Num","description":"Absolute value of the number"}]},{"description":"Get the minimum of two numbers.","name":"min","params":[{"name":"a","type":":Num","description":"A number"},{"name":"b","type":":Num","description":"A number"}],"returns":[{"type":":Num","description":"The smaller number"}]},{"description":"Get the maximum of two numbers.","name":"max","params":[{"name":"a","type":":Num","description":"A number"},{"name":"b","type":":Num","description":"A number"}],"returns":[{"type":":Num","description":"The larger number"}]},{"description":"Calculate the sine function at the given angle.","name":"sin","params":[{"name":"x","type":":Num","description":"Angle, in radiants"}],"returns":[{"type":":Flt","description":"Value of the sine function at x"}]},{"description":"Calculate the inverse sine function for the given value.","name":"asin","params":[{"name":"x","type":":Num","description":"X value"}],"returns":[{"type":":Flt","description":"Value of the inverse sine function at x"}]},{"description":"Calculate the cosine function at the given angle.","name":"cos","params":[{"name":"x","type":":Num","description":"Angle, in radiants"}],"returns":[{"type":":Flt","description":"Value of the cosine function at x"}]},{"description":"Calculate the inverse cosine function for the given value.","name":"acos","params":[{"name":"x","type":":Num","description":"X value"}],"returns":[{"type":":Flt","description":"Value of the inverse cosine function at x"}]},{"description":"Calculate the tangent function at the given angle.","name":"tan","params":[{"name":"x","type":":Num","description":"Angle, in radiants"}],"returns":[{"type":":Flt","description":"Value of the tangent function at x"}]},{"description":"Calculate the inverse tangent function for the given value.","name":"atan","params":[{"name":"x","type":":Num","description":"X value"}],"returns":[{"type":":Flt","description":"Value of the inverse tangent function at x"}]},{"description":"Calculate the angle from the X axis to a point.","name":"atan2","params":[{"name":"y","type":":Num","description":"Y coordinate of a point"},{"name":"x","type":":Num","description":"X coordinate of a point"}],"returns":[{"type":":Flt","description":"Angle from the X axis to the point, in radiants"}]},{"description":"Get the nearest integer that is equal to or greater than the given number.","name":"ceil","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Int","description":"The nearest integer that is equal to or greater than x"}]},{"description":"Get the nearest integer that is equal to or smaller than the given number.","name":"floor","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Int","description":"The nearest integer that is equal to or smaller than x"}]},{"description":"Calculate the square root of a number.","name":"sqrt","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Flt","description":"The square root of x"}]},{"description":"Calculate e raised to the power of a value.","name":"exp","params":[{"name":"x","type":":Num","description":"The exponent"}],"returns":[{"type":":Flt","description":"e raised to the power of x"}]},{"description":"Calculate a base value raised to the power of a given exponent.","name":"pow","params":[{"name":"b","type":":Num","description":"The base"},{"name":"n","type":":Num","description":"The exponent"}],"returns":[{"type":":Flt","description":"b raised to the power of n"}]},{"description":"Calculate the natural logarithm of a number.","name":"ln","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Flt","description":"Natural logarithm of x"}]},{"description":"Calculate the logarithm of a number, with respect to a given base.","name":"log","params":[{"name":"x","type":":Num","description":"A number"},{"name":"b","type":":Num","description":"The base"}],"returns":[{"type":":Flt","description":"The logarithm of x with respect to base b"}]},{"description":"Get the nearest integer of the given number.","name":"round","params":[{"name":"x","type":":Num","description":"A number"}],"returns":[{"type":":Int","description":"The nearest integer of the number"}]},{"description":"Get a random float between 0 (inclusive) and 1 (exclusive).","name":"rand-flt","params":[],"returns":[{"type":":Flt","description":"A random float between 0 (inclusive) and 1 (exclusive)"}]},{"description":"Get a pseudo-random integer between 0 (inclusive) and n (exclusive).","name":"rand-int","params":[{"name":"n","type":":Int","description":"Upper bound of the random number, must be positive"}],"returns":[{"type":":Int","description":"A random integer between 0 (inclusive) and n (exclusive)"}]},{"description":"Initialize the random number generator with the given seed. When initialized\nwith the same seed, the generated random numbers will be deterministic.","name":"rand-seed","params":[{"name":"seed","type":":Int","description":"Any number to be used as seed"}],"returns":[]},{"description":"Swap the two topmost objects on the stack.","name":"swap","params":[{"name":"a","type":":Obj","description":"An object"},{"name":"b","type":":Obj","description":"Another object"}],"returns":[{"type":":Obj","description":"Object b"},{"type":":Obj","description":"Object a"}]},{"description":"Remove the topmost object from the stack.","name":"pop","params":[{"name":"obj","type":":Obj","description":"An object"}],"returns":[]},{"description":"Duplicate the topmost object on the stack.","name":"dup","params":[{"name":"obj","type":":Obj","description":"An object"}],"returns":[{"type":":Obj","description":"The object"},{"type":":Obj","description":"Copy of the object"}]},{"description":"Copy the i-th object (from top) of the stack on top of the stack.","name":"copy","params":[{"name":"i","type":":Int","description":"Offset of the object to copy, from the top of the stack"}],"returns":[{"type":":Obj","description":"The copied object"}]},{"description":"Clear the stack.","name":"clear","params":[],"returns":[]},{"description":"Remove whitespace from the start and end of a string.","name":"trim","params":[{"name":"str","type":":Str","description":"String"}],"returns":[{"type":":Str","description":"Trimmed string"}]},{"description":"Transform a string to lower-case.","name":"lower-case","params":[{"name":"str","type":":Str","description":"String"}],"returns":[{"type":":Str","description":"String in lower-case"}]},{"description":"Transform a string to upper-case.","name":"upper-case","params":[{"name":"str","type":":Str","description":"String"}],"returns":[{"type":":Str","description":"String in upper-case"}]},{"description":"Get the characters of a string.","name":"str->chars","params":[{"name":"str","type":":Str","description":"String"}],"returns":[{"type":":Arr","description":"Array of character codes"}]},{"description":"Create a string from an array of character codes.","name":"chars->str","params":[{"name":"chars","type":":Arr","description":"Characters codes"}],"returns":[{"type":":Str","description":"String with the given character codes"}]},{"description":"Get the character of a given character code.","name":"char->str","params":[{"name":"char","type":":Int","description":"Character code"}],"returns":[{"type":":Str","description":"Character as string"}]},{"description":"Split a string using a regular expression. The string is split wherever it matches.","name":"split","params":[{"name":"str","type":":Str","description":"String"},{"name":"regex","type":":Str","description":"A regular expression"}],"returns":[{"type":":Arr","description":"Splitted parts"}]},{"description":"Replace the first match of a regular expression in a string.","name":"replace-first","params":[{"name":"str","type":":Str","description":"String"},{"name":"regex","type":":Str","description":"A regular expression"},{"name":"replace","type":":Str","description":"String to replace the match with"}],"returns":[{"type":":Str","description":"Modified string"}]},{"description":"Replace the all matches of a regular expression in a string.","name":"replace-all","params":[{"name":"str","type":":Str","description":"String"},{"name":"regex","type":":Str","description":"A regular expression"},{"name":"replace","type":":Str","description":"String to replace the matches with"}],"returns":[{"type":":Str","description":"Modified string"}]},{"description":"Format the given string using the given parameters.\nThis uses a C-style format string, e.g. `%d` is used for integers, `%s` for strings and so on.","name":"format","params":[{"name":"format","type":":Str","description":"Format string"},{"name":"params","type":":Arr","description":"Parameters"}],"returns":[{"type":":Str","description":"Formatted string"}]},{"description":"Get the type of an object.","name":"type","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Sym","description":"The type of the object"}]},{"description":"Check if the given object is an array or executable array.","name":"arr?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is an array or executable array, false otherwise"}]},{"description":"Check if the given object is a boolean.","name":"bool?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is a boolean, false otherwise"}]},{"description":"Check if the given object is an executable array.","name":"exearr?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is an executable array, false otherwise"}]},{"description":"Check if the given object is a float.","name":"flt?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is a float, false otherwise"}]},{"description":"Check if the given object is an integer.","name":"int?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is an integer, false otherwise"}]},{"description":"Check if the given object is nil.","name":"nil?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is nil, false otherwise"}]},{"description":"Check if the given object is a number.","name":"num?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is a number, false otherwise"}]},{"description":"Check if the given object is an object (i.e. not nil).","name":"obj?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is an object and not nil."}]},{"description":"Check if the given object is a parameter list.","name":"params?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is a parameter list, false otherwise"}]},{"description":"Check if the given object is a string.","name":"str?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is a string, false otherwise"}]},{"description":"Check if the given object is a symbol.","name":"sym?","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Bool","description":"True if obj is a symbol, false otherwise"}]},{"description":"Convert the given object to a string.","name":"str","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Str","description":"String representation of the object"}]},{"description":"Convert the given object to a float.","name":"flt","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Flt","description":"Object parsed to a float, or `nil` if not possible"}]},{"description":"Convert the given object to an integer.","name":"int","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Int","description":"Object parsed to an integer, or `nil` if not possible"}]},{"description":"Convert the given object to a symbol.","name":"sym","params":[{"name":"obj","type":":Obj","description":"String or symbol"}],"returns":[{"type":":Sym","description":"The specified symbol or a new symbol with the given name if the argument is a string"}]},{"description":"Convert the given object to an executable array. If the object is an array, the items are wrapped in an executable array. Otherwise, a new executable array that only contains the given object is created.","name":"exearr","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":ExeArr","description":"Executable array"}]},{"description":"Convert the given object to an array. If the object is an executable array, the items are wrapped in an array. Otherwise, a new array that only contains the given object is created.","name":"arr","params":[{"name":"obj","type":":Obj","description":"Object"}],"returns":[{"type":":Arr","description":"Array"}]}],"variables":[{"description":"The mathematical constant Pi.","name":"PI"}]}
